stages:
  - init
  - test
  - build
  - deploy
  - cleanup

variables:
  VENV_ROOT: C:\temp\builds
  VENV_PY27: C:\temp\builds\python27_x32
  VENV_PY35: C:\temp\builds\python35_x64
  WXPYTHON_SNAPSHOTS: https://wxpython.org/Phoenix/snapshot-builds
  PYPI_URL: http://tphweb.tph.local/pypi

# Set environment vars
before_script:

  - REM ==================== Before Script ====================

  # Create the build dir environment variable.
  - set BUILD_DIR=%VENV_PY35%\%CI_PROJECT_ID%
  - set BUILD_DIR=%BUILD_DIR%__%CI_PROJECT_NAMESPACE%
  - set BUILD_DIR=%BUILD_DIR%__%CI_PROJECT_NAME%
  - set BUILD_DIR=%BUILD_DIR%__%CI_PIPELINE_ID%
  - set BUILD_DIR=%BUILD_DIR%__%CI_BUILD_REF_NAME%
  - echo %BUILD_DIR%

  # And also for Py27
  - set BUILD_DIR27=%VENV_PY27%\%CI_PROJECT_ID%
  - set BUILD_DIR27=%BUILD_DIR27%__%CI_PROJECT_NAMESPACE%
  - set BUILD_DIR27=%BUILD_DIR27%__%CI_PROJECT_NAME%
  - set BUILD_DIR27=%BUILD_DIR27%__%CI_PIPELINE_ID%
  - set BUILD_DIR27=%BUILD_DIR27%__%CI_BUILD_REF_NAME%
  - echo %BUILD_DIR27%

  - REM ~~~~~~~~~~~~~~~~~~~~ End Before Script ~~~~~~~~~~~~~~~~~~~~

  # Clear pip cache because it sometimes causes issues.
  - rd /S /Q C:\Users\tph-buildbot\AppData\Local\pip\Cache

#################################################
### Python35_x64 jobs                         ###
#################################################
python35_x64-pip-install:
  stage: init
  when: always
  tags:
    - python
  script:
    - "REM ==================== pip-install ===================="
    - call C:\WinPython35\scripts\env.bat

    - python -m venv --clear %BUILD_DIR%
    - call %BUILD_DIR%\Scripts\activate.bat

    # Can't upgrade pip in place.
    # See https://github.com/pypa/pip/issues/1299#issuecomment-188198496
    - python -m pip install --upgrade --no-cache-dir pip setuptools wheel

    - "python -m pip install --only-binary :all: --pre -f %WXPYTHON_SNAPSHOTS% wxPython_Phoenix"

    - python -m pip install -r requirements.txt --no-cache-dir
    - python -m pip install -r dev-requirements.txt --no-cache-dir

python35_x64-tests:
  stage: test
  when: on_success
  tags:
    - python
  script:
    - call C:\WinPython35\scripts\env.bat
    - call %BUILD_DIR%\Scripts\activate.bat
    - green -vvv -s 1 -W -t wafer_map

python35_x64-build:
  stage: build
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call C:\WinPython35\scripts\env.bat
    - call %BUILD_DIR%\Scripts\activate.bat
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*

python35_x64-clean-up:
  stage: cleanup
  when: always
  tags:
    - python
  script:
    - rd /S /Q %BUILD_DIR%


#################################################
### Python27_x32 jobs                         ###
#################################################
python27_x32-pip-install:
  stage: init
  when: always
  tags:
    - python
  script:
    - REM ==================== pip-install ====================
    - call C:\WinPython27_x32\scripts\env.bat
    - python -m pip install virtualenv

    - python -m virtualenv --clear %BUILD_DIR27% --no-pip --no-setuptools --no-wheel
    - call %BUILD_DIR27%\Scripts\activate.bat

    # Python27 hangs
    - python "C:\temp\builds\get-pip.py" --no-index --find-links="C:\temp\builds"

    # Can't upgrade pip in place.
    # See https://github.com/pypa/pip/issues/1299#issuecomment-188198496
    - python -m pip install --upgrade --no-cache-dir pip setuptools wheel

    - "python -m pip install --only-binary :all: --pre -f %WXPYTHON_SNAPSHOTS% wxPython_Phoenix"

    - python -m pip install -r requirements.txt --no-cache-dir
    - python -m pip install -r dev-requirements.txt --no-cache-dir

python27_x32-tests:
  stage: test
  when: on_success
  tags:
    - python
  script:
    - call C:\WinPython27_x32\scripts\env.bat
    - call %BUILD_DIR27%\Scripts\activate.bat
    - green -vvv -s 1 -W -t wafer_map

python27_x32-build:
  stage: build
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call C:\WinPython27_x32\scripts\env.bat
    - call %BUILD_DIR27%\Scripts\activate.bat
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*

python27_x32-clean-up:
  stage: cleanup
  when: always
  tags:
    - python
  script:
    - rd /S /Q %BUILD_DIR27%


#################################################
### All Builds                                ###
#################################################
deploy:
  stage: deploy
  environment:
    name: production
    url: $PYPI_URL/simple/wafer-map           # note that we use linux-style env vars even though we're on windows!
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call C:\WinPython35\scripts\env.bat
    - call %BUILD_DIR%\Scripts\activate.bat
    - python -m pip install --upgrade twine
    - dir dist\*.zip /b/s > temp.txt
    - set /p VAR=<temp.txt
    - echo %VAR%
    - twine register --repository %PYPI_URL% --repository-url %PYPI_URL% -u '' -p '' %VAR%
    - twine upload --repository %PYPI_URL% --repository-url %PYPI_URL% -u '' -p '' dist/*